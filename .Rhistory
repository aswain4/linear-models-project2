sort(abs(mlr_studentized)) > 2
mlr_studentized <- rstudent(mlr)
sort(abs(mlr_studentized))
mlr_studentized <- rstudent(mlr)
sort(abs(mlr_studentized), descreasing=TRUE)
swiss <- datasets::swiss
result <- lm(Fertility~Education+Catholic+Infant.Mortality, data=swiss)
mlr_hii <- lm.influence(mlr)$hat ##leverages
mlr_student <- rstudent(mlr) ##ext studentized res
n <- nrow(train)
p <- 5
hii[hii>2*p/n]
mlr_hii[mlr_hii>2*p/n]
#mlr_hii[mlr_hii>2*p/n]
sort(mlr_hii)
#mlr_hii[mlr_hii>2*p/n]
sort(abs(mlr_hii))
mlr_student[abs(mlr_student)>3]
mlr_student[abs(mlr_student)>5]
mlr_student[abs(mlr_student)>6]
mlr_student[abs(mlr_student)>7]
mlr_student[abs(mlr_student)>8]
sort(abs(mlr_student))
#mlr_student[abs(mlr_student)>8]
sort(-abs(mlr_student))
#mlr_student[abs(mlr_student)>8]
-sort(abs(mlr_student))
#mlr_student[abs(mlr_student)>8]
sort(abs(mlr_student))
#mlr_student[abs(mlr_student)>8]
sort(abs(-mlr_student))
#mlr_student[abs(mlr_student)>8]
sort(abs(mlr_student))
#mlr_student[abs(mlr_student)>8]
mlr_student[abs(mlr_student)>3]
number <- mlr_student[abs(mlr_student)>3]
number <- mlr_student[abs(mlr_student)>3]
dim(number)
mlr_student[abs(mlr_student)>3]
mlr_student[abs(mlr_student)>2]
number <- mlr_student[abs(mlr_student)>2]
number <- mlr_student[abs(mlr_student)>3]
number <- mlr_student[abs(mlr_student)>4]
number <- mlr_student[abs(mlr_student)>5]
number <- mlr_student[abs(mlr_student)>6]
number <- mlr_student[abs(mlr_student)>7]
number <- mlr_student[abs(mlr_student)>3]
mlr_student[abs(mlr_student)>3]
DFBETAS<-dfbetas(mlr)
abs(DFBETAS)>2/sqrt(n)
DFFITS<-dffits(result)
DFFITS[abs(DFFITS)>2*sqrt(p/n)]
DFFITS<-dffits(mlr)
DFFITS[abs(DFFITS)>2*sqrt(p/n)]
COOKS<-cooks.distance(mlr)
COOKS[COOKS>1]
COOKS<-cooks.distance(mlr)
COOKS[COOKS]
COOKS<-cooks.distance(mlr)
COOKS
COOKS<-cooks.distance(mlr)
sort(COOKS)
COOKS<-cooks.distance(mlr)
sort(COOKS, descending=TRUE)
COOKS<-cooks.distance(mlr)
sort(COOKS, descending=T)
COOKS<-cooks.distance(mlr)
sort(COOKS)
COOKS<-cooks.distance(mlr)
COOKS[COOKS>1]
COOKS<-cooks.distance(mlr)
order(COOKS)
COOKS<-cooks.distance(mlr)
order(COOKS, descending=TRUE)
COOKS<-cooks.distance(mlr)
order(COOKS, descending=T)
COOKS<-cooks.distance(mlr)
order(COOKS, decreasing=T)
COOKS<-cooks.distance(mlr)
sort(COOKS, decreasing=T)
DFFITS<-dffits(mlr)
DFFITS[abs(DFFITS)>2*sqrt(p/n)]
DFFITS<-dffits(mlr)
sort(DFFITS[abs(DFFITS)>2*sqrt(p/n)], decreasing=T)
DFBETAS<-dfbetas(mlr)
sort(abs(DFBETAS)>2/sqrt(n), decreasing=T)
DFBETAS<-dfbetas(mlr)
abs(DFBETAS)>2/sqrt(n)
#stepstar<-(train$price)**0.1
#trainST<-data.frame(train,stepstar)
train.ystar<-lm(stepstar~sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated + sqft_above, data=trainST)
par(mfrow = c(2, 2))
plot(train.ystar)
#stepstar<-(train$price)**0.1
#trainST<-data.frame(train,stepstar)
train.ystar<-lm(stepstar~sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated + sqft_above, data=trainST)
#par(mfrow = c(2, 2))
plot(train.ystar)
library(faraway)
sort(faraway::vif(train.ystar))
star_hii <- lm.influence(train.ystar)$hat ##leverages
star_student <- rstudent(train.ystar) ##ext studentized res
n <- nrow(train)
p <- 13
mlr_hii <- lm.influence(mlr)$hat ##leverages
mlr_student <- rstudent(mlr) ##ext studentized res
n <- nrow(train)
p <- 5
star_hii <- lm.influence(train.ystar)$hat ##leverages
star_student <- rstudent(train.ystar) ##ext studentized res
n <- nrow(train)
p2 <- 13
star_hii[star_hii>2*p2/n]
sort(star_hii[star_hii>2*p2/n])
sort(star_hii[star_hii>2*p2/n], decreasing = T)
star_student[abs(star_student)>3]
DFBETAS_star<-dfbetas(train.ystar)
abs(DFBETAS_star)>2/sqrt(n)
DFFITS_star<-dffits(train.ystar)
sort(DFFITS_star[abs(DFFITS_star)>2*sqrt(p2/n)], decreasing=T)
COOKS_star<-cooks.distance(train.ystar)
sort(COOKS_star, decreasing=T)
Data<-read.csv("kc_house_data.csv", sep=",", header=TRUE)
set.seed(6021)
sample.data<-sample.int(nrow(Data), floor(.50*nrow(Data)), replace = F)
train<-Data[sample.data, ]
test<-Data[-sample.data, ]
library(tidyverse)
train$waterfront <- factor(train$waterfront) # factor instead of int
levels(train$waterfront) <- c("No", "Yes")
ggplot(train, aes(x=sqft_living, y=waterfront)) +
geom_boxplot()
library(tidyverse)
train$waterfront <- factor(train$waterfront) # factor instead of int
levels(train$waterfront) <- c("No", "Yes")
ggplot(train, aes(x=sqft_living, y=waterfront)) +
geom_boxplot()
train <- train %>%
mutate(size_prop= round((sqft_living/sqft_lot) * 100, 2))
ggplot(train, aes(x=size_prop, y=price, color=waterfront)) +
geom_point() +
coord_cartesian(ylim =  c(0, 4000000), xlim = c(0, 250)) +
labs(x="Size Proportion", y="Price", title="Size Proportion by Price")
train <- train %>%
mutate(grade_cat= cut(grade, breaks=c(0, 10, Inf), labels=c("low", "high")))
train <- train %>%
mutate(renovate= cut(yr_renovated, breaks=c(1, 2005, Inf), labels=c("Renovated Years Ago", "Recently Renovated")))
ggplot(data=subset(train, !is.na(renovate)), aes(x=grade_cat, fill=renovate)) +
geom_bar(position="fill") +
labs(x="Grade Cateogry", y="Proportion", title="Property Grade Based on Recency of Renovations")
mlr <- lm(price~waterfront+view+condition+grade+size_prop, data=train)
summary(mlr)
#par(mfrow=c(2,2))
plot(mlr)
library(faraway)
faraway::vif(mlr)
mlr_hii <- lm.influence(mlr)$hat ##leverages
mlr_student <- rstudent(mlr) ##ext studentized res
n <- nrow(train)
p <- 5
mlr_hii[mlr_hii>2*p/n]
mlr_student[abs(mlr_student)>3]
DFBETAS<-dfbetas(mlr)
abs(DFBETAS)>2/sqrt(n)
DFFITS<-dffits(mlr)
sort(DFFITS[abs(DFFITS)>2*sqrt(p/n)], decreasing=T)
COOKS<-cooks.distance(mlr)
sort(COOKS, decreasing=T)
regnull <- lm(price~1, data=train)
regfull <- lm(price~bedrooms+bathrooms+sqft_living+sqft_lot+floors+waterfront+view+grade+condition+sqft_above+sqft_basement+yr_built+yr_renovated+sqft_living15+sqft_lot15+size_prop, data=train) #only included the relevant predictors
step(regnull, scope=list(lower=regnull, upper=regfull), direction="forward")
step_mod <- lm(price~ sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated + sqft_above, data=train)
summary(step_mod)
#par(mfrow=c(2,2))
plot(step_mod)
library(MASS)
MASS::boxcox(step_mod, lambda = seq(-0.1, 0.2, 1/20))
library(MASS)
MASS::boxcox(step_mod, lambda = seq(-0.1, 0.2, 1/20))
stepstar<-(train$price)**0.1
trainST<-data.frame(train,stepstar)
train.ystar<-lm(stepstar~sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated + sqft_above, data=trainST)
#par(mfrow = c(2, 2))
plot(train.ystar)
library(faraway)
sort(faraway::vif(train.ystar))
star_hii <- lm.influence(train.ystar)$hat ##leverages
star_student <- rstudent(train.ystar) ##ext studentized res
n <- nrow(train)
p2 <- 13
sort(star_hii[star_hii>2*p2/n], decreasing = T)
star_student[abs(star_student)>3]
DFBETAS_star<-dfbetas(train.ystar)
abs(DFBETAS_star)>2/sqrt(n)
DFFITS_star<-dffits(train.ystar)
sort(DFFITS_star[abs(DFFITS_star)>2*sqrt(p2/n)], decreasing=T)
COOKS_star<-cooks.distance(train.ystar)
sort(COOKS_star, decreasing=T)
View(train)
train['9715',]
train[c('15871', '9715', '13465'),]
Data <- Data[-c('15871')]
Data <- Data[-c('15871'),]
Data <- Data[c(-'15871'),]
Data <- Data[c(-'15871')]
Data <- Data[-c('15871')]
Data <- Data[c('15871')]
Data <- Data[c('15871'),]
View(Data)
Data<-read.csv("kc_house_data.csv", sep=",", header=TRUE)
set.seed(6021)
sample.data<-sample.int(nrow(Data), floor(.50*nrow(Data)), replace = F)
train<-Data[sample.data, ]
test<-Data[-sample.data, ]
Data <- Data[c(-'15871'),]
Data <- Data[-c('15871'),]
Data <- Data[-c(15871),]
#Data<-read.csv("kc_house_data.csv", sep=",", header=TRUE)
set.seed(6021)
sample.data<-sample.int(nrow(Data), floor(.50*nrow(Data)), replace = F)
train<-Data[sample.data, ]
test<-Data[-sample.data, ]
View(Data)
library(tidyverse)
train$waterfront <- factor(train$waterfront) # factor instead of int
levels(train$waterfront) <- c("No", "Yes")
ggplot(train, aes(x=sqft_living, y=waterfront)) +
geom_boxplot()
library(tidyverse)
train$waterfront <- factor(train$waterfront) # factor instead of int
levels(train$waterfront) <- c("No", "Yes")
ggplot(train, aes(x=sqft_living, y=waterfront)) +
geom_boxplot()
train <- train %>%
mutate(size_prop= round((sqft_living/sqft_lot) * 100, 2))
train <- train %>%
mutate(size_prop= round((sqft_living/sqft_lot) * 100, 2))
ggplot(train, aes(x=size_prop, y=price, color=waterfront)) +
geom_point() +
coord_cartesian(ylim =  c(0, 4000000), xlim = c(0, 250)) +
labs(x="Size Proportion", y="Price", title="Size Proportion by Price")
train <- train %>%
mutate(HQ_LQ= cut(grade, breaks=c(0, 10, Inf), labels=c("low", "high")))
ggplot(train, aes(x=grade_cat, fill=size_cat)) +
geom_bar(position="fill") +
labs(x="Grade", y="Proportion", title="Size Difference Among Construction Grades")
ggplot(train, aes(x=grade_cat, fill=size_cat)) +
geom_bar(position="fill") +
labs(x="Grade", y="Proportion", title="Size Difference Among Construction Grades")
ggplot(train, aes(x=HQ_LQ, fill=size_cat)) +
geom_bar(position="fill") +
labs(x="Grade", y="Proportion", title="Size Difference Among Construction Grades")
ggplot(train, aes(x=HQ_LQ, fill=size_cat)) +
geom_bar(position="fill") +
labs(x="Grade", y="Proportion", title="Size Difference Among Construction Grades")
train <- train %>%
mutate(renovate= cut(yr_renovated, breaks=c(1, 2005, Inf), labels=c("Renovated Years Ago", "Recently Renovated")))
ggplot(data=subset(train, !is.na(renovate)), aes(x=grade_cat, fill=renovate)) +
geom_bar(position="fill") +
labs(x="Grade Cateogry", y="Proportion", title="Property Grade Based on Recency of Renovations")
ggplot(data=subset(train, !is.na(renovate)), aes(x=HQ_LQ, fill=renovate)) +
geom_bar(position="fill") +
labs(x="Grade Cateogry", y="Proportion", title="Property Grade Based on Recency of Renovations")
regnull <- lm(price~1, data=train)
regfull <- lm(price~bedrooms+bathrooms+sqft_living+sqft_lot+floors+waterfront+view+grade+condition+sqft_above+sqft_basement+yr_built+yr_renovated+sqft_living15+sqft_lot15+size_prop, data=train) #only included the relevant predictors
step(regnull, scope=list(lower=regnull, upper=regfull), direction="forward")
step_mod <- lm(price~ sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated + sqft_above, data=train)
summary(step_mod)
step_mod <- lm(price~ sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated + sqft_above, data=train)
summary(step_mod)
reduced <- lm(price~ sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated, data=train)
anova(reduced, step_mod)
#par(mfrow=c(2,2))
plot(reduced)
# scatter of train and model as smooth
par(mfrow=c(2,2))
plot(reduced)
# scatter of train and model as smooth
par(mfrow=c(2,2))
plot(reduced)
#par(mfrow=c(2,2))
plot(reduced)
# test as scatter, model as smooth
library(MASS)
MASS::boxcox(reduced, lambda = seq(-0.1, 0.2, 1/20))
reduce_star<-(train$price)**0.1
train_reduce<-data.frame(train,stepstar)
train.ystar<-lm(reduce_star~sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated, data=train_reduce)
#par(mfrow = c(2, 2))
plot(train.ystar)
reduce_star<-(train$price)**0.1
train_reduce<-data.frame(train,stepstar)
train.ystar<-lm(reduce_star~sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated, data=train_reduce)
par(mfrow = c(2, 2))
plot(train.ystar)
reduce_star<-(train$price)**0.1
train_reduce<-data.frame(train,reduce_star)
train.ystar<-lm(reduce_star~sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated, data=train_reduce)
par(mfrow = c(2, 2))
plot(train.ystar)
View(train_reduce)
View(train.ystar)
reduce_star<-(train$price)**0.1
train_reduce<-data.frame(train,reduce_star)
train.ystar<-lm(reduce_star~sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated, data=train_reduce)
#par(mfrow = c(2, 2))
plot(train.ystar)
reduce_star<-(train$price)**0.1
train_reduce<-data.frame(train,reduce_star)
train.ystar<-lm(reduce_star~sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated, data=train_reduce)
par(mfrow = c(2, 2))
plot(train.ystar)
library(faraway)
sort(faraway::vif(train.ystar))
reduce_hii <- lm.influence(train.ystar)$hat ##leverages
reduce_student <- rstudent(train.ystar) ##ext studentized res
n <- nrow(train)
p2 <- 12
reduce_hii <- lm.influence(train.ystar)$hat ##leverages
reduce_student <- rstudent(train.ystar) ##ext studentized res
n <- nrow(train)
p <- 12
sort(reduce_hii[reduce_hii>2*p/n], decreasing = T)
sort(reduce_hii[reduce_hii>2*p/n], decreasing = T)
reduce_student[abs(reduce_student)>3] #outliers
reduce_student[abs(reduce_student)>4] #outliers
reduce_student[abs(reduce_student)>3] #outliers
sort(reduce_student[abs(reduce_student)]) #outliers
sort(reduce_student[abs(reduce_student)], decreasing=T) #outliers
reduce_student[abs(reduce_student) > 3] #outliers
DFFITS<-dffits(train.ystar)
sort(DFFITS[abs(DFFITS)>2*sqrt(p2/n)], decreasing=T)
COOKS<-cooks.distance(train.ystar)
sort(COOKS, decreasing=T)
DFBETAS<-dfbetas(train.ystar)
abs(DFBETAS)>2/sqrt(n)
Data <- Data[-c(15871),]
#Data<-read.csv("kc_house_data.csv", sep=",", header=TRUE)
set.seed(6021)
sample.data<-sample.int(nrow(Data), floor(.50*nrow(Data)), replace = F)
train<-Data[sample.data, ]
test<-Data[-sample.data, ]
library(tidyverse)
train$waterfront <- factor(train$waterfront) # factor instead of int
levels(train$waterfront) <- c("No", "Yes")
ggplot(train, aes(x=sqft_living, y=waterfront)) +
geom_boxplot()
train <- train %>%
mutate(size_prop= round((sqft_living/sqft_lot) * 100, 2))
ggplot(Data, aes(x=long, y=lat, color=price))+
geom_point()
ggplot(train, aes(x=size_prop, y=price, color=waterfront)) +
geom_point() +
coord_cartesian(ylim =  c(0, 4000000), xlim = c(0, 250)) +
labs(x="Size Proportion", y="Price", title="Size Proportion by Price")
train <- train %>%
mutate(HQ_LQ= cut(grade, breaks=c(0, 10, Inf), labels=c("low", "high")))
ggplot(train, aes(x= size_prop, y=grade_cat)) +
geom_boxplot()
DFBETAS<-dfbetas(train.ystar)
abs(DFBETAS)>2/sqrt(n)
reduce_student[abs(reduce_student) > 3] #outliers
reduce_student[abs(reduce_student) > 4] #outliers
reduce_student[abs(reduce_student) > 3] #outliers
Data<-read.csv("kc_house_data.csv", sep=",", header=TRUE)
set.seed(6021)
sample.data<-sample.int(nrow(Data), floor(.50*nrow(Data)), replace = F)
train<-Data[sample.data, ]
test<-Data[-sample.data, ]
Data <- Data[-c(15871),]
#Data<-read.csv("kc_house_data.csv", sep=",", header=TRUE)
set.seed(6021)
sample.data<-sample.int(nrow(Data), floor(.50*nrow(Data)), replace = F)
train<-Data[sample.data, ]
test<-Data[-sample.data, ]
library(tidyverse)
train$waterfront <- factor(train$waterfront) # factor instead of int
levels(train$waterfront) <- c("No", "Yes")
ggplot(train, aes(x=sqft_living, y=waterfront)) +
geom_boxplot()
train <- train %>%
mutate(size_prop= round((sqft_living/sqft_lot) * 100, 2))
ggplot(train, aes(x=size_prop, y=price, color=waterfront)) +
geom_point() +
coord_cartesian(ylim =  c(0, 4000000), xlim = c(0, 250)) +
labs(x="Size Proportion", y="Price", title="Size Proportion by Price")
train <- train %>%
mutate(HQ_LQ= cut(grade, breaks=c(0, 10, Inf), labels=c("low", "high")))
ggplot(train, aes(x= size_prop, y=HQ_LQ)) +
geom_boxplot()
train <- train %>%
mutate(reno= cut(yr_renovated, breaks=c(1, 2005, Inf), labels=c("Renovated Years Ago", "Recently Renovated")))
ggplot(data=subset(train, !is.na(reno)), aes(x=HQ_LQ, fill=reno)) +
geom_bar(position="fill") +
labs(x="Grade Cateogry", y="Proportion", title="Property Grade Based on Recency of Renovations")
levels(train$reno)
regnull <- lm(price~1, data=train)
regfull <- lm(price~bedrooms+bathrooms+sqft_living+sqft_lot+floors+waterfront+view+grade+condition+sqft_above+sqft_basement+yr_built+yr_renovated+sqft_living15+sqft_lot15+size_prop, data=train) #only included the relevant predictors
step(regnull, scope=list(lower=regnull, upper=regfull), direction="forward")
step_mod <- lm(price~ sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated + sqft_above, data=train)
summary(step_mod)
reduced <- lm(price~ sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated, data=train)
anova(reduced, step_mod)
reduced <- lm(price~ sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated, data=train)
summary(reduced)
anova(reduced, step_mod)
reduce_star<-(train$price)**0.1
train_reduce<-data.frame(train,reduce_star)
train.ystar<-lm(reduce_star~sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated, data=train_reduce)
par(mfrow = c(2, 2))
plot(train.ystar)
library(faraway)
sort(faraway::vif(train.ystar))
reduce_hii <- lm.influence(train.ystar)$hat ##leverages
reduce_student <- rstudent(train.ystar) ##ext studentized res
n <- nrow(train)
p <- 12
DFFITS<-dffits(train.ystar) #influential
sort(DFFITS[abs(DFFITS)>2*sqrt(p2/n)], decreasing=T)
DFFITS<-dffits(train.ystar) #influential
sort(DFFITS[abs(DFFITS)>2*sqrt(p/n)], decreasing=T)
COOKS<-cooks.distance(train.ystar)
sort(COOKS, decreasing=T)
#reduce_student[abs(reduce_student) > 3] #outliers
reduce_student[reduce_student]
#reduce_student[abs(reduce_student) > 3] #outliers
abs(reduce_student[reduce_student])
#reduce_student[abs(reduce_student) > 3] #outliers
reduce_student[abs(reduce_student])
#reduce_student[abs(reduce_student) > 3] #outliers
reduce_student[abs(reduce_student)]
#reduce_student[abs(reduce_student) > 3] #outliers
sort(reduce_student[abs(reduce_student)])
#reduce_student[abs(reduce_student) > 3] #outliers
reduce_student[abs(reduce_student)]
#reduce_student[abs(reduce_student) > 3] #outliers
sort(reduce_student[abs(reduce_student)], descending=T)
#reduce_student[abs(reduce_student) > 3] #outliers
sort(reduce_student[abs(reduce_student)], decreasing=T)
reduce_student[abs(reduce_student) > 3] #outliers
reduce_student[abs(reduce_student) > 2] #outliers
reduce_student[abs(reduce_student) > 1] #outliers
reduce_student[abs(reduce_student) > 2] #outliers
reduce_student[abs(reduce_student) > 3] #outliers
View(test)
ggplot(data=test, aes(y=price)) +
geom_point() +
geom_smooth(data=test.ystar)
ggplot(data=test, aes(y=price)) +
geom_point() +
geom_smooth(data=train.ystar)
ggplot(test, aes(y=price)) +
geom_point() +
geom_smooth(data=train.ystar)
ggplot(test, aes(x=bathrooms, y=price)) +
geom_point() +
geom_smooth(data=train.ystar)
ggplot(test, aes(x=bathrooms, y=price)) +
geom_point() +
geom_smooth(data=train.ystar)
reduce_star<-(train$price)**0.1
train_reduce<-data.frame(train,reduce_star)
train.ystar<-lm(reduce_star~sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated, data=train_reduce)
#par(mfrow = c(2, 2))
plot(train.ystar)
train_drop1 <- train[-c(9715)]
View(train)
train_drop1 <- train[-c('9715')]
train_drop1 <- train[-c(9715),]
drop1_star<-(train_drop1$price)**0.1
train_reduce_drop1<-data.frame(train,drop1_star)
drop1_star<-(train_drop1$price)**0.1
train_reduce_drop1<-data.frame(train_drop1, drop1_star)
train.ystar_drop1<-lm(reduce_star~sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated, data=train_reduce_drop1)
drop1_star<-(train_drop1$price)**0.1
train_reduce_drop1<-data.frame(train_drop1, drop1_star)
train.ystar_drop1<-lm(reduce_star~sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated, data=train_reduce_drop1)
drop1_star<-(train_drop1$price)**0.1
train_reduce_drop1<-data.frame(train_drop1, drop1_star)
train.ystar_drop1<-lm(drop1_star~sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated, data=train_reduce_drop1)
#par(mfrow = c(2, 2))
plot(train.ystar_drop1)
library(faraway)
sort(faraway::vif(train.ystar_drop1))
drop1_hii <- lm.influence(train.ystar_drop1)$hat ##leverages
drop1_student <- rstudent(train.ystar_drop1) ##ext studentized res
n <- nrow(train_drop1)
sort(drop1_hii[drop1_hii>2*p/n], decreasing = T)
train_drop1 <- train[-c(9715),]
drop1_star<-(train_drop1$price)**0.1
train_reduce_drop1<-data.frame(train_drop1, drop1_star)
train.ystar_drop1<-lm(drop1_star~sqft_living + grade + yr_built + waterfront + size_prop + view + bedrooms + bathrooms + sqft_living15 + condition + sqft_lot15 + yr_renovated, data=train_reduce_drop1)
#par(mfrow = c(2, 2))
plot(train.ystar_drop1)
library(faraway)
sort(faraway::vif(train.ystar_drop1))
drop1_hii <- lm.influence(train.ystar_drop1)$hat ##leverages
drop1_student <- rstudent(train.ystar_drop1) ##ext studentized res
n <- nrow(train_drop1)
sort(drop1_hii[drop1_hii>2*p/n], decreasing = T)
drop1_hii <- lm.influence(train.ystar_drop1)$hat ##leverages
drop1_student <- rstudent(train.ystar_drop1) ##ext studentized res
n <- nrow(train_reduce_drop1)
sort(drop1_hii[drop1_hii>2*p/n], decreasing = T)
drop1_hii <- lm.influence(train.ystar_drop1)$hat ##leverages
drop1_student <- rstudent(train.ystar_drop1) ##ext studentized res
n <- nrow(train_drop1)
sort(drop1_hii[drop1_hii>2*p/n], decreasing = T)
library(car)
car::avPlots(train.ystar)
library(car)
car::avPlots(train.ystar)
